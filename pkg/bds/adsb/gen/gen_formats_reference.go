// The following directive is necessary to make the package coherent:

// +build ignore

// This program generates list_converter.go. It can be invoked by running
// go generate

package main

import (
	"log"
	"os"
	"text/template"
	"time"
)

func main() {

	type Option struct {
		Suffix string
		Level  string
	}

	type FormatParameter struct {
		Name     string
		TypeCode int
		Register string
		Options  []Option
	}

	// Shorthand definitions
	sinceV0 := []Option{
		Option{Suffix: "V0OrMore", Level: "Level0OrMore"},
	}

	exactLevels := []Option{
		Option{Suffix: "V0", Level: "Level0Exactly"},
		Option{Suffix: "V1", Level: "Level1Exactly"},
		Option{Suffix: "V2", Level: "Level2"},
	}

	formatParameters := []FormatParameter{
		{"Format01", 1, "BDS08", sinceV0},
		{"Format02", 2, "BDS08", sinceV0},
		{"Format03", 3, "BDS08", sinceV0},
		{"Format04", 4, "BDS08", sinceV0},
		{"Format05", 5, "BDS06", exactLevels},
		{"Format06", 6, "BDS06", exactLevels},
		{"Format07", 7, "BDS06", exactLevels},
		{"Format08", 8, "BDS06", exactLevels},
		{"Format09", 9, "BDS05", exactLevels},
		{"Format10", 10, "BDS05", exactLevels},
		{"Format11", 11, "BDS05", exactLevels},
		{"Format12", 12, "BDS05", exactLevels},
		{"Format13", 13, "BDS05", exactLevels},
		{"Format14", 14, "BDS05", exactLevels},
		{"Format15", 15, "BDS05", exactLevels},
		{"Format16", 16, "BDS05", exactLevels},
		{"Format17", 17, "BDS05", exactLevels},
		{"Format18", 18, "BDS05", exactLevels},
		{"Format19", 19, "BDS09", sinceV0},
		{"Format20", 20, "BDS05", exactLevels},
		{"Format21", 21, "BDS05", exactLevels},
		{"Format22", 22, "BDS05", exactLevels},
		{"Format28", 28, "BDS61", []Option{
			Option{Suffix: "V0OrMore", Level: "Level0OrMore"},
			Option{Suffix: "V0", Level: "Level0Exactly"},
			Option{Suffix: "V1", Level: "Level1Exactly"},
			Option{Suffix: "V2", Level: "Level2"},
		}},
		{"Format29", 29, "BDS62", []Option{
			Option{Suffix: "V1OrMore", Level: "Level1OrMore"},
			Option{Suffix: "V2", Level: "Level2"},
		}},
		{"Format31", 31, "BDS65", exactLevels},
	}

	// Open the target file
	f, err := os.Create("formats_reference.go")
	if err != nil {
		log.Fatal(err)
	}

	// Close at the end
	defer func() {
		closeErr := f.Close()
		if closeErr != nil {
			log.Fatal(err)
		}
	}()

	// Execute the template
	err = builderTemplate.Execute(
		f,
		struct {
			Timestamp        time.Time
			FormatParameters []FormatParameter
		}{
			Timestamp:        time.Now(),
			FormatParameters: formatParameters,
		})
	if err != nil {
		log.Fatal(err)
	}

}

func die(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

var builderTemplate = template.Must(template.New("").Parse(`// Package adsb holds the definition for the ADSB messages
//
// Code generated by go generate; DO NOT EDIT.
//
// This file was generated by gen_formats_reference.go at {{ .Timestamp }}
package adsb

import (
	"github.com/twuillemin/modes/pkg/bds/bds"
)

{{ range $formatParameter := .FormatParameters }}
// ------------------------------------------------------------------------------------
//
//                                {{ $formatParameter.Name }}
//
// ------------------------------------------------------------------------------------
{{ range $option := $formatParameter.Options }}
// {{ $formatParameter.Name }}{{ $option.Suffix }} is the definition of a message at {{ $formatParameter.Name }} for ADSB {{ $option.Level }}
var {{ $formatParameter.Name }}{{ $option.Suffix }} = adsbFormatReferenceDefinition{
	typeCode:  {{ $formatParameter.TypeCode }},
	register:  bds.{{ $formatParameter.Register }},
	adsbLevel: {{ $option.Level }},
}{{ end }}{{ end }}
`))
