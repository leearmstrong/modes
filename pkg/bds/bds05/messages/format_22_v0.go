// Package messages holds the definition of the messages
//
// Code generated by go generate; DO NOT EDIT.
//
// This file was generated by gen_formats_v0.go at 2019-07-22 22:14:33.5885267 +0300 EEST m=+0.019947301
package messages

import (
	"fmt"
	"github.com/twuillemin/modes/pkg/bds/adsb"
	"github.com/twuillemin/modes/pkg/bds/bds"
	"github.com/twuillemin/modes/pkg/bds/bds05/fields"
)

// ------------------------------------------------------------------------------------
//
//                                Format22V0
//
// ------------------------------------------------------------------------------------

// Format22V0 is a message at the format BDS 0,5 for ADSB V0
type Format22V0 struct {
	SurveillanceStatus        fields.SurveillanceStatus
	SingleAntennaFlag         fields.SingleAntennaFlag
	Altitude                  fields.Altitude
	Time                      fields.Time
	CPRFormat                 fields.CompactPositionReportingFormat
	EncodedLatitude           fields.EncodedLatitude
	EncodedLongitude          fields.EncodedLongitude
	HorizontalProtectionLimit fields.HorizontalProtectionLimitGNSS
	ContainmentRadius         fields.ContainmentRadiusGNSS
}

// GetMessageFormat returns the ADSB format of the message
func (message *Format22V0) GetMessageFormat() adsb.MessageFormat {
	return adsb.Format22V0
}

// GetRegister returns the register of the message
func (message *Format22V0) GetRegister() bds.Register {
	return adsb.Format22V0.GetRegister()
}

// ToString returns a basic, but readable, representation of the message
func (message *Format22V0) ToString() string {
	return bds05v0ToString(message)
}

// GetSurveillanceStatus returns the Surveillance Status
func (message *Format22V0) GetSurveillanceStatus() fields.SurveillanceStatus {
	return message.SurveillanceStatus
}

// GetSingleAntennaFlag returns the SingleAntennaFlag
func (message *Format22V0) GetSingleAntennaFlag() fields.SingleAntennaFlag {
	return message.SingleAntennaFlag
}

// GetAltitude returns the Altitude
func (message *Format22V0) GetAltitude() fields.Altitude {
	return message.Altitude
}

// GetTime returns the Time
func (message *Format22V0) GetTime() fields.Time {
	return message.Time
}

// GetCPRFormat returns the CompactPositionReportingFormat
func (message *Format22V0) GetCPRFormat() fields.CompactPositionReportingFormat {
	return message.CPRFormat
}

// GetEncodedLatitude returns the EncodedLatitude
func (message *Format22V0) GetEncodedLatitude() fields.EncodedLatitude {
	return message.EncodedLatitude
}

// GetEncodedLongitude returns the EncodedLongitude
func (message *Format22V0) GetEncodedLongitude() fields.EncodedLongitude {
	return message.EncodedLongitude
}

// GetHorizontalProtectionLimit returns the HorizontalProtectionLimit
func (message *Format22V0) GetHorizontalProtectionLimit() fields.HorizontalProtectionLimit {
	return message.HorizontalProtectionLimit
}

// GetContainmentRadius returns the ContainmentRadius
func (message *Format22V0) GetContainmentRadius() fields.ContainmentRadius {
	return message.ContainmentRadius
}

// readFormat22V0 reads a message at the format BDS 0,5
func readFormat22V0(data []byte) (*Format22V0, error) {

	formatTypeCode := (data[0] & 0xF8) >> 3

	if formatTypeCode != adsb.Format22V0.GetTypeCode() {
		return nil, fmt.Errorf("the data are given at format %v and can not be read at the format Format22V0", formatTypeCode)
	}

	horizontalProtectionLimit := hplGNSSByFormat[formatTypeCode]
	containmentRadius := crGNSSByFormat[formatTypeCode]

	return &Format22V0{
		SurveillanceStatus:        fields.ReadSurveillanceStatus(data),
		SingleAntennaFlag:         fields.ReadSingleAntennaFlag(data),
		Altitude:                  fields.ReadAltitude(data),
		Time:                      fields.ReadTime(data),
		CPRFormat:                 fields.ReadCompactPositionReportingFormat(data),
		EncodedLatitude:           fields.ReadEncodedLatitude(data),
		EncodedLongitude:          fields.ReadEncodedLongitude(data),
		HorizontalProtectionLimit: horizontalProtectionLimit,
		ContainmentRadius:         containmentRadius,
	}, nil
}
