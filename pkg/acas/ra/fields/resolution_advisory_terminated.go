package fields

import (
	"fmt"
)

// RATerminatedIndicator indicates when an RA previously generated by ACAS has ceased being generated.
type RATerminatedIndicator int

const (
	// RATCurrent signifies that ACAS is currently generating the RA indicated in the ARA subfield
	RATCurrent RATerminatedIndicator = 0
	// RATTerminated signifies that the RA indicated by the ARA subfield has been terminated
	RATTerminated RATerminatedIndicator = 1
)

// ToString returns a basic, but readable, representation of the field
func (terminatedIndicator RATerminatedIndicator) ToString() string {
	switch terminatedIndicator {
	case RATCurrent:
		return "ACAS is currently generating the RA"
	case RATTerminated:
		return "the RA indicated has been terminated"
	default:
		return fmt.Sprintf("%v - Unknown code", terminatedIndicator)
	}
}

// ReadRATerminatedIndicator reads the bit data that constitutes the Resolution Advisory Terminated Indicator field (RAT)
func ReadRATerminatedIndicator(data []byte) RATerminatedIndicator {

	rat := RATCurrent
	if (data[2] & 0x20) != 0 {
		rat = RATTerminated
	}

	return rat
}
